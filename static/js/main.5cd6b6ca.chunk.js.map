{"version":3,"sources":["pages/main/Stage/Touch/Picked/Picked.module.scss","pages/main/Main.module.scss","pages/main/Intro/Intro.module.scss","pages/main/Stage/Stage.module.scss","pages/about/About.module.scss","components/Layout/Layout.module.scss","pages/main/Intro/Intro.tsx","pages/main/Intro/index.ts","helpers/util.ts","pages/main/Stage/stage.reducer.ts","hooks/useHandle.ts","pages/main/Stage/Touch/Picked/Picked.tsx","pages/main/Stage/Touch/Picked/index.ts","pages/main/Stage/Touch/Touch.tsx","pages/main/Stage/Touch/index.ts","pages/main/Stage/Stage.tsx","pages/main/Main.tsx","pages/main/Stage/index.ts","pages/main/index.ts","pages/about/index.ts","pages/about/About.tsx","components/Layout/index.ts","components/Layout/Layout.tsx","pages/index.tsx","store/app.store.ts","store/reducers.ts","store/createStore.ts","App.tsx","serviceWorker.ts","index.tsx","pages/main/Stage/Touch/Touch.module.scss"],"names":["module","exports","Intro","moveToStage","className","styles","root","getColor","allColors","a","i","length","j","Math","floor","random","shuffle","colors","index","initialState","pickedId","masterId","touches","_touches","touch","createAction","eventType","changedTouches","pick","reducer","draft","action","type","payload","now","Date","valueOf","Object","entries","forEach","k","v","end","id","x","y","color","start","_x","_y","_min_x","_max_x","_min_y","_max_y","_dist","sqrt","pow","values","get","filter","sort","b","find","availTouches","e","isPicked","useStageReducer","data","useImmerReducer","useHandle","callback","handle","useRef","current","useCallback","args","Picked","props","useWindowSize","width","height","size","radius","useMemo","max","ref","useEffect","style","strokeWidth","top","left","xmlns","version","viewBox","cx","cy","r","focus","stroke","SIZE","Touch","master","useState","ready","setReady","hidden","circle_wrap","animate","picked","circle","arc","arc_bg","inner","fill","Stage","Mode","moveToIntro","dispatch","handleTouch","event","nativeEvent","Array","from","map","identifier","pageX","pageY","availHash","join","handlePick","timer","setTimeout","clearTimeout","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","key","Main","stage","mode","setMode","Current","intro","moveTo","About","Layout","preventDefault","addEventListener","children","pages","name","path","Component","Routes","routes","exact","render","routeProps","to","handleActions","state","produce","count","combineReducers","app","persistReducer","storage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","err","enhancer","store","createStore","reducers","persistor","persistStore","App","loading","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.5cd6b6ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Picked_root__R2qM4\",\"focus\":\"Picked_focus__16AXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Main_root__OVCeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Intro_root__D-sNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Stage_root__jNgoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"About_root__3rHTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__KuT-s\"};","import * as React from 'react';\nimport styles from './Intro.module.scss';\n\nfunction Intro({ moveToStage }: any) {\n  return (\n    <div className={styles.root}>\n      <h1>Roulette</h1>\n    </div>\n  );\n}\n\nexport default Intro;\n","import Intro from './Intro';\n\nexport default Intro;\n","import { schemeCategory10 as colors } from 'd3-scale-chromatic';\n\nconst getColor = (() => {\n  const allColors = shuffle([...colors]);\n  let index = 0;\n  return () => allColors[index++ % allColors.length];\n})();\n\nfunction shuffle(a: any[]) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nexport { getColor };\n","import { createAction } from 'redux-actions';\nimport { useImmerReducer } from 'use-immer';\nimport { get } from 'lodash-es';\nimport { getColor } from '../../../helpers/util';\n\nconst initialState = {\n  pickedId: null,\n  masterId: null,\n  touches: [],\n  _touches: {},\n};\n\nconst TOUCH = 'stage/TOUCH';\nconst PICK = 'stage/PICK';\n\nconst MIN_DISTANCE = 10;\nconst MAX_DISTANCE = 200;\n\nexport const touch = createAction(\n  TOUCH,\n  (eventType: string, changedTouches: any[]) => ({ eventType, changedTouches }),\n);\n\nexport const pick = createAction(PICK, () => null);\n\nconst timestamp = () => new Date().valueOf();\n\nconst reducer = (draft: any, action: any) => {\n  const { type, payload } = action;\n  switch (type) {\n    case TOUCH: {\n      const now = timestamp();\n      const { eventType, changedTouches } = payload;\n      Object.entries(draft._touches).forEach(([k, v]: any) => {\n        if (v.end && v.end + 2000 < now) {\n          delete draft._touches[k];\n        }\n      });\n      if (eventType === 'touchstart') {\n        changedTouches.forEach(([id, x, y]: any) => {\n          draft._touches[id] = {\n            id,\n            color: getColor(),\n            x,\n            y,\n            start: now,\n            _x: x,\n            _y: y,\n            _min_x: x,\n            _max_x: x,\n            _min_y: y,\n            _max_y: y,\n            _dist: 0,\n          };\n        });\n      } else if (eventType === 'touchmove') {\n        changedTouches.forEach(([id, x, y]: any) => {\n          if (draft._touches[id]) {\n            draft._touches[id].x = x;\n            draft._touches[id].y = y;\n            if (draft._touches[id]._min_x > x) draft._touches[id]._min_x = x;\n            if (draft._touches[id]._max_x < x) draft._touches[id]._max_x = x;\n            if (draft._touches[id]._min_y > y) draft._touches[id]._min_y = y;\n            if (draft._touches[id]._max_y < y) draft._touches[id]._max_y = y;\n            draft._touches[id]._dist = Math.sqrt(\n              Math.pow(\n                draft._touches[id]._max_x - draft._touches[id]._min_x,\n                2,\n              ) +\n                Math.pow(\n                  draft._touches[id]._max_y - draft._touches[id]._min_y,\n                  2,\n                ),\n            );\n          }\n        });\n      } else {\n        changedTouches.forEach(([id, x, y]: any) => {\n          if (draft._touches[id]) {\n            draft._touches[id].end = now;\n          }\n        });\n      }\n      draft.touches = Object.values(draft._touches);\n\n      draft.masterId = get(\n        [\n          ...draft.touches.filter(\n            ({ end, _dist }: any) =>\n              !end && MIN_DISTANCE < _dist && _dist < MAX_DISTANCE,\n          ),\n        ].sort((a: any, b: any) => {\n          if (a._dist === b._dist) {\n            return 0;\n          }\n          return a._dist < b._dist ? 1 : -1;\n        }),\n        [0, 'id'],\n        null,\n      );\n\n      if (\n        !draft.touches.find(({ id, end }: any) => id === draft.pickedId && !end)\n      ) {\n        draft.pickedId = null;\n      }\n      return;\n    }\n    case PICK: {\n      draft.touches = Object.values(draft._touches);\n      const availTouches = draft.touches.filter(({ end }: any) => !end);\n      if (draft.pickedId === null && availTouches.length > 1) {\n        draft.pickedId = get(availTouches, [\n          ~~(Math.random() * availTouches.length),\n          'id',\n        ]);\n        draft.touches.forEach((e: any) => {\n          if (e.id === draft.pickedId) {\n            e.isPicked = true;\n          } else {\n            delete e.isPicked;\n          }\n        });\n      }\n      return;\n    }\n  }\n};\n\nfunction useStageReducer(data?: any) {\n  return useImmerReducer(reducer, data || initialState);\n}\n\nexport default useStageReducer;\n","import { useCallback, useRef } from 'react';\n\nfunction useHandle(callback?: Function) {\n  const handle = useRef<Function>();\n  handle.current = callback;\n  return useCallback((e: any, ...args: any[]) => {\n    if (typeof handle.current === 'function') {\n      return handle.current(e, ...args);\n    }\n  }, []);\n}\n\nexport default useHandle;\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useWindowSize } from 'react-use';\nimport styles from './Picked.module.scss';\n\nfunction Picked(props: any) {\n  const { width, height } = useWindowSize();\n  const { color, x, y, end, size } = props;\n\n  const radius = useMemo(() => Math.max(width, height), [width, height]);\n\n  const ref = useRef<any>();\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.strokeWidth = end ? 0 : `${radius * 2 - (size + 50)}px`;\n    }\n  }, [radius, end, size]);\n\n  return (\n    <div\n      className={styles.root}\n      style={{\n        top: -height + y,\n        left: -width + x,\n      }}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        version=\"1.1\"\n        width={width * 2}\n        height={height * 2}\n        viewBox={`0 0 ${width * 2} ${height * 2}`}\n      >\n        <circle\n          cx={width}\n          cy={height}\n          r={radius}\n          ref={ref}\n          className={styles.focus}\n          stroke={color}\n          strokeWidth={0}\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default Picked;\n","import Picked from './Picked';\n\nexport default Picked;\n","import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport Picked from './Picked';\nimport styles from './Touch.module.scss';\n\nconst SIZE = 150;\n\nfunction Touch(props: any) {\n  const { id, x, y, color, end, pickedId, isPicked, master } = props;\n\n  const [ready, setReady] = useState(false);\n  useEffect(() => setReady(true), []);\n\n  const hidden = (pickedId && pickedId !== id) || end;\n  return (\n    <>\n      {isPicked && <Picked {...props} size={SIZE} />}\n      <div\n        className={cx(\n          styles.circle_wrap,\n          ready && styles.ready,\n          hidden && styles.end,\n          !hidden && styles.animate,\n          isPicked && styles.picked,\n        )}\n        style={{ top: y - SIZE / 2, left: x - SIZE / 2 }}\n      >\n        <div className={cx(styles.circle, master && styles.master)}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            version=\"1.1\"\n            width={SIZE}\n            height={SIZE}\n            viewBox=\"0 0 140 140\"\n          >\n            {ready && (\n              <>\n                <circle\n                  cx=\"70\"\n                  cy=\"70\"\n                  r=\"52.5\"\n                  stroke={color}\n                  className={styles.arc}\n                />\n                <circle\n                  cx=\"70\"\n                  cy=\"70\"\n                  r=\"52.5\"\n                  stroke={color}\n                  className={styles.arc_bg}\n                />\n              </>\n            )}\n            <circle\n              className={styles.inner}\n              cx=\"70\"\n              cy=\"70\"\n              r=\"35\"\n              fill={color}\n            />\n          </svg>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Touch;\n","import Touch from './Touch';\n\nexport default Touch;\n","import React, { useEffect, useMemo, SyntheticEvent } from 'react';\nimport useStageReducer, { touch, pick } from './stage.reducer';\nimport { useHandle } from '../../../hooks';\nimport Touch from './Touch';\nimport styles from './Stage.module.scss';\n\nfunction Stage({ moveToIntro }: any) {\n  const [{ touches, pickedId, masterId }, dispatch] = useStageReducer();\n\n  const handleTouch = useHandle(\n    (event: SyntheticEvent<HTMLDivElement, TouchEvent>) => {\n      dispatch(\n        touch(\n          event.nativeEvent.type,\n          Array.from(event.nativeEvent.changedTouches).map((touch: Touch) => [\n            touch.identifier,\n            touch.pageX,\n            touch.pageY,\n          ]),\n        ),\n      );\n    },\n  );\n\n  const availHash = useMemo(\n    () =>\n      touches\n        .filter(({ end }: any) => !end)\n        .map(({ id }: any) => id)\n        .join(','),\n    [touches],\n  );\n\n  const handlePick = useHandle(() => dispatch(pick()));\n\n  useEffect(() => {\n    const timer = setTimeout(handlePick, 2000);\n    return () => clearTimeout(timer);\n  }, [availHash, handlePick]);\n\n  return (\n    <div\n      className={styles.root}\n      onTouchStart={handleTouch}\n      onTouchMove={handleTouch}\n      onTouchEnd={handleTouch}\n      onTouchCancel={handleTouch}\n    >\n      {touches.map((touch: any) => (\n        <Touch\n          key={touch.id}\n          {...touch}\n          pickedId={pickedId}\n          master={masterId === touch.id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Stage;\n","import React, { useMemo, useState } from 'react';\nimport styles from './Main.module.scss';\nimport Intro from './Intro';\nimport Stage from './Stage';\n\nexport const uriPattern = '/';\n\nenum Mode {\n  intro = 'intro',\n  stage = 'stage',\n}\n\nconst Main: React.FC = () => {\n  const [mode, setMode] = useState(Mode.stage);\n\n  const Current = useMemo(() => {\n    switch (mode) {\n      case Mode.intro:\n        return Intro;\n      case Mode.stage:\n        return Stage;\n      default:\n        return () => null;\n    }\n  }, [mode]);\n\n  const moveTo = useMemo(\n    () => ({\n      moveToIntro: () => setMode(Mode.intro),\n      moveToStage: () => setMode(Mode.stage),\n    }),\n    [setMode],\n  );\n\n  return (\n    <div className={styles.root}>\n      <Current {...moveTo} />\n    </div>\n  );\n};\n\nexport default Main;\n","import Stage from './Stage';\n\nexport default Stage;\n","import Main, { uriPattern } from './Main';\n\nexport default Main;\nexport { uriPattern };\n","import About, { uriPattern } from './About';\n\nexport default About;\nexport { uriPattern };\n","import React from 'react';\nimport styles from './About.module.scss';\n\nexport const uriPattern = '/about';\n\nconst About: React.FC = (props: any) => {\n  return (\n    <div className={styles.root}>\n      <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React, { useEffect, useRef } from 'react';\nimport styles from './Layout.module.scss';\n\nconst Layout: React.FC = (props: any) => {\n  const ref = useRef<any>();\n  useEffect(() => {\n    if (ref.current) {\n      const preventDefault = (event: any) => event.preventDefault();\n      ref.current.addEventListener('touchstart', preventDefault);\n      ref.current.addEventListener('touchmove', preventDefault);\n    }\n  }, []);\n  return (\n    <div ref={ref} className={styles.root}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Main, { uriPattern as main_path } from './main';\nimport About, { uriPattern as about_path } from './about';\nimport Layout from '../components/Layout';\n\nconst pages = [\n  {\n    name: 'Main',\n    path: main_path,\n    Component: Main,\n  },\n  {\n    name: 'About',\n    path: about_path,\n    Component: About,\n  },\n];\n\nconst REDIRECT_URI = main_path;\n\nconst Routes = (() => {\n  const routes = [\n    ...pages.map(({ exact, path, Component }: any, i) => (\n      <Route\n        key={`route-${i}`}\n        exact={!!exact}\n        path={path}\n        render={(routeProps: any) => <Component {...routeProps} />}\n      />\n    )),\n    <Redirect key=\"redirect-to-default\" to={REDIRECT_URI} />,\n  ];\n  return () => (\n    <Layout>\n      <Switch>{routes}</Switch>\n    </Layout>\n  );\n})();\n\nexport default pages;\n\nexport { Routes };\n","import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\n\nconst initialState = {\n  count: 0,\n} as {\n  count: number;\n};\n\nconst INCREASE = 'app/INCREASE';\n\nexport const increase = createAction(INCREASE, () => null);\n\nexport default handleActions(\n  {\n    [INCREASE]: (state, { payload }) =>\n      produce(state, (draft) => {\n        draft.count++;\n      }),\n  },\n  initialState,\n);\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport app from './app.store';\n\nexport default combineReducers({\n  app: persistReducer({ key: 'app', storage }, app),\n});\n","import { createStore, compose } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport reducers from './reducers';\n\nexport default (initialState?: any) => {\n  let composeEnhancers: any;\n  try {\n    // @ts-ignore\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  } catch (err) {\n    composeEnhancers = compose;\n  }\n  const enhancer = composeEnhancers();\n\n  const store: any = createStore(reducers, initialState, enhancer);\n\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Routes } from './pages';\nimport createStore from './store/createStore';\n\nconst { store, persistor } = createStore();\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <Router>\n          <Routes />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle_wrap\":\"Touch_circle_wrap__bYmci\",\"ready\":\"Touch_ready__3T9o7\",\"end\":\"Touch_end__3Kqx2\",\"picked\":\"Touch_picked__2aXKt\",\"animate\":\"Touch_animate__1dHWO\",\"breath\":\"Touch_breath__3zong\",\"circle\":\"Touch_circle__27J8m\",\"outer\":\"Touch_outer__2Af_C\",\"master\":\"Touch_master__IS2-1\",\"inner\":\"Touch_inner__2kcO-\",\"arc\":\"Touch_arc__2d-we\",\"arc_bg\":\"Touch_arc_bg__2KWQH\"};"],"sourceRoot":""}