.circle_wrap {
  position: fixed;
  transform: scale(0.5);
  transition: transform 0.3s ease-in-out;
  z-index: 10;

  &.ready {
    transform: scale(1);
  }

  &.end {
    transform: scale(0);
  }

  &.picked {
    z-index: 100;
  }

  &.animate {
    animation: breath 2s linear infinite;
  }

  @keyframes breath {
    0% {
      transform: scale(1);
    }

    25% {
      transform: scale(1.1);
    }

    50% {
      transform: scale(1);
    }

    75% {
      transform: scale(0.9);
    }

    100% {
      transform: scale(1);
    }
  }
}

/**
 * Google Material Design Preloader
 *
 * CSS animated SVG implementation of the Google Material Design preloader
 *
 * Reference: http://goo.gl/ZfulRH
 * License: MIT
 * Author: Rudi Theunissen (rudolf.theunissen$gmail.com)
 * Version: 1.1.1
 */
.circle {
  $easing: cubic-bezier(0.8, 0, 0.4, 0.8);
  $speed: 1320ms;
  $linecap: square;
  $loops: 5;
  $arc: 0.72;
  $perimeter: 110px * 3.14159265358979;
  font-size: 0;
  display: inline-block;
  animation: outer $speed * $loops linear infinite;
  pointer-events: none;
  border-radius: 50%;

  &.master {
    background: rgba(255, 255, 255, 0.95);
  }

  svg {
    animation: inner $speed linear infinite;

    circle {
      &.arc {
        fill: none;
        stroke-width: 15px;
        stroke-linecap: $linecap;
        animation: arc $speed $easing infinite;
      }

      &.arc_bg {
        fill: none;
        stroke-width: 15px;
        opacity: 0.67;
      }

      &.inner {
        stroke: none;
      }
    }
  }

  @keyframes outer {
    0% {
      transform: rotate(0);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes inner {
    0% {
      transform: rotate(-360deg * (1 - $arc));
    }

    100% {
      transform: rotate(0);
    }
  }

  @keyframes arc {
    0% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: 0;
    }

    40% {
      stroke-dasharray: $arc * $perimeter, $perimeter;
      stroke-dashoffset: 0;
    }

    100% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: -$arc * $perimeter;
    }
  }
}